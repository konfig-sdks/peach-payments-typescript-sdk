/*
Payments API inbound

The Payments API enables you to do a custom integration with Peach Payments and thereby support multiple payment methods.

The version of the OpenAPI document: 2.0.0
Contact: support@peachpayments.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * 
 * @export
 * @interface Checkout
 */
export interface Checkout {
    /**
     * The entity for the request. By default, this is the channel ID.
     * @type {string}
     * @memberof Checkout
     */
    'authentication.entityId': string;
    /**
     * Token to verify the integrity of the payment, ensuring that only the merchant sending the request is accepted.
     * @type {string}
     * @memberof Checkout
     */
    'signature': string;
    /**
     * Merchant-provided reference number unique for your transactions.
     * @type {string}
     * @memberof Checkout
     */
    'merchantTransactionId': string;
    /**
     * The amount of the payment request. The period is used as the decimal separator. M-PESA does not support decimal amounts, so Checkout automatically rounds them up.
     * @type {string}
     * @memberof Checkout
     */
    'amount': string;
    /**
     * The payment type for the request. Accepts `DB`.  Does not accept `RG`, but you can tokenise a card by performing a DB with `createRegistration`.  Refund transactions through the Dashboard or as described in the <a href=\"https://developer.peachpayments.com/docs/checkout-refund\" target=\"_blank\">documentation</a>. 
     * @type {string}
     * @memberof Checkout
     */
    'paymentType': CheckoutPaymentTypeEnum;
    /**
     * The currency code of the payment request amount.
     * @type {string}
     * @memberof Checkout
     */
    'currency': CheckoutCurrencyEnum;
    /**
     * Unique value to represent each request.
     * @type {string}
     * @memberof Checkout
     */
    'nonce': string;
    /**
     * Checkout uses a POST request to redirect the customer to this URL after the customer completes checkout. Must be a valid URL that can be accessed through a browser.
     * @type {string}
     * @memberof Checkout
     */
    'shopperResultUrl': string;
    /**
     * The preferred payment method which is active in the checkout page at the point of redirecting.
     * @type {string}
     * @memberof Checkout
     */
    'defaultPaymentMethod'?: CheckoutDefaultPaymentMethodEnum;
    /**
     * Force the default payment method to be the only payment method.
     * @type {string}
     * @memberof Checkout
     */
    'forceDefaultMethod'?: CheckoutForceDefaultMethodEnum;
    /**
     * Merchant-provided invoice number unique for your transactions. This identifier is not sent onwards.
     * @type {string}
     * @memberof Checkout
     */
    'merchantInvoiceId'?: string;
    /**
     * The customer is redirected to this URL if they cancel checkout. It must be a valid URL that can be reached through a browser.
     * @type {string}
     * @memberof Checkout
     */
    'cancelUrl'?: string;
    /**
     * Override the preconfigured webhook URL for this checkout instance, any changes to checkout will send a webhook to this url.
     * @type {string}
     * @memberof Checkout
     */
    'notificationUrl'?: string;
    /**
     * A name value pair used for sending custom information.
     * @type {string}
     * @memberof Checkout
     */
    'customParameters[name]'?: string;
    /**
     * An identifier for this customer. Typically this is the ID that identifies the shopper in the shop\'s system.
     * @type {string}
     * @memberof Checkout
     */
    'customer.merchantCustomerId'?: string;
    /**
     * The customer\'s first name or given name.  Required if you send in any other customer parameters, and for some risk checks and payment providers.  Peach Payments recommends including the name so that it displays in the Peach Dashboard and is available for subsequent queries.  Truncated after 48 characters. 
     * @type {string}
     * @memberof Checkout
     */
    'customer.givenName'?: string;
    /**
     * The customer\'s last name or surname.  Required if you send in any other customer parameters, and for some risk checks and payment providers.  Peach Payments recommends including the surname so that it displays in the Peach Dashboard and is available for subsequent queries.  Truncated after 48 characters. 
     * @type {string}
     * @memberof Checkout
     */
    'customer.surname'?: string;
    /**
     * The customer\'s mobile number.
     * @type {string}
     * @memberof Checkout
     */
    'customer.mobile'?: string;
    /**
     * The customer\'s email address.
     * @type {string}
     * @memberof Checkout
     */
    'customer.email'?: string;
    /**
     * The customer\'s status. Accepts `NEW` or `EXISTING`.
     * @type {string}
     * @memberof Checkout
     */
    'customer.status'?: CheckoutCustomerStatusEnum;
    /**
     * The customer\'s birth date in the yyyy-MM-dd format.
     * @type {string}
     * @memberof Checkout
     */
    'customer.birthDate'?: string;
    /**
     * The customer\'s IP address.
     * @type {string}
     * @memberof Checkout
     */
    'customer.ip'?: string;
    /**
     * The customer\'s phone number.
     * @type {string}
     * @memberof Checkout
     */
    'customer.phone'?: string;
    /**
     * The customer\'s ID number, required for high-risk merchants supporting Capitec Pay.
     * @type {string}
     * @memberof Checkout
     */
    'customer.idNumber'?: string;
    /**
     * The door number, floor, building number, building name, and/or street name of the billing address.
     * @type {string}
     * @memberof Checkout
     */
    'billing.street1'?: string;
    /**
     * The adjoining road or locality, if required, of the billing address.
     * @type {string}
     * @memberof Checkout
     */
    'billing.street2'?: string;
    /**
     * The town, district, or city of the billing address.
     * @type {string}
     * @memberof Checkout
     */
    'billing.city'?: string;
    /**
     * The company of the billing address.
     * @type {string}
     * @memberof Checkout
     */
    'billing.company'?: string;
    /**
     * The country of the billing address (ISO 3166-1).
     * @type {string}
     * @memberof Checkout
     */
    'billing.country'?: string;
    /**
     * The county, state, or region of the billing address.
     * @type {string}
     * @memberof Checkout
     */
    'billing.state'?: string;
    /**
     * The postal code or ZIP code of the billing address.
     * @type {string}
     * @memberof Checkout
     */
    'billing.postcode'?: string;
    /**
     * The door number, floor, building number, building name, and/or street name of the shipping address.
     * @type {string}
     * @memberof Checkout
     */
    'shipping.street1'?: string;
    /**
     * The adjoining road or locality, if required, of the shipping address.
     * @type {string}
     * @memberof Checkout
     */
    'shipping.street2'?: string;
    /**
     * The town, district, or city of the shipping address.
     * @type {string}
     * @memberof Checkout
     */
    'shipping.city'?: string;
    /**
     * The company of the shipping address.
     * @type {string}
     * @memberof Checkout
     */
    'shipping.company'?: string;
    /**
     * The postal code or ZIP code of the shipping address.
     * @type {string}
     * @memberof Checkout
     */
    'shipping.postcode'?: string;
    /**
     * The country of the shipping address (ISO 3166-1).
     * @type {string}
     * @memberof Checkout
     */
    'shipping.country'?: string;
    /**
     * The county, state, or region of the shipping address.
     * @type {string}
     * @memberof Checkout
     */
    'shipping.state'?: string;
    /**
     * The tax percentage applied to the price of the item in the shopping cart.
     * @type {string}
     * @memberof Checkout
     */
    'cart.tax'?: string;
    /**
     * The total amount of the cart item including quantity.
     * @type {string}
     * @memberof Checkout
     */
    'cart.shippingAmount'?: string;
    /**
     * Discount amount applied on order amount.
     * @type {string}
     * @memberof Checkout
     */
    'cart.discount'?: string;
    /**
     * Used to enable card tokenisation with COPYandPAY.
     * @type {string}
     * @memberof Checkout
     */
    'createRegistration'?: CheckoutCreateRegistrationEnum;
    /**
     * Used to provide a name for the application that is creating the checkout instance.
     * @type {string}
     * @memberof Checkout
     */
    'originator'?: string;
    /**
     * Text to display on \"Return to Store\" button on completing checkout.
     * @type {string}
     * @memberof Checkout
     */
    'returnTo'?: CheckoutReturnToEnum;
}

type CheckoutPaymentTypeEnum = 'DB'
type CheckoutCurrencyEnum = 'ZAR' | 'USD' | 'KES' | 'MUR' | 'GBP' | 'EUR'
type CheckoutDefaultPaymentMethodEnum = 'CARD' | 'MASTERPASS' | 'MOBICRED' | 'EFTSECURE' | 'MPESA' | '1FORYOU' | 'APLUS' | 'PAYPAL' | 'ZEROPAY' | 'PAYFLEX' | 'FINCHOICEPAY' | 'BLINKBYEMTEL' | 'CAPITECPAY' | 'NEDBANKDIRECTEFT' | 'PAYBYBANK' | 'APPLE PAY' | 'MCBJUICE'
type CheckoutForceDefaultMethodEnum = 'true' | 'false'
type CheckoutCustomerStatusEnum = 'NEW' | 'EXISTING'
type CheckoutCreateRegistrationEnum = 'true' | 'false'
type CheckoutReturnToEnum = 'STORE' | 'INVOICE'


